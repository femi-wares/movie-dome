# Generated by Django 5.1.1 on 2024-11-15 19:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='movies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_name', models.CharField(max_length=200, unique=True, verbose_name='movies name')),
                ('s_title', models.TextField(verbose_name='the search title for this movie can include the movie name and movie discription or bio')),
                ('title', models.TextField(verbose_name='a simple page title')),
                ('meta', models.TextField(verbose_name='meta discrption for the movie page somthing that discribes the movie')),
                ('discription', models.TextField(verbose_name='movies discription about the movie ')),
                ('movie_types', models.CharField(choices=[('Chinese movies', 'Chinese movies'), ('Philipine movies', 'Philipine movies'), ('Korean drama', 'Korean drama'), ('Indian movies', 'Indian movies'), ('Nollywood', 'Nollywood'), ('Hollywood', 'Hollywood'), ('Animation movies', 'Animation movies'), ('Japanese movies', 'Japanese movies'), ('American movie', 'Anerican moviea')], default='American movies', max_length=200, verbose_name='select the categories to clasifile the movie')),
                ('fam', models.CharField(choices=[('trending', 'trending'), ('Documentary', 'documentary'), ('General', 'General')], default='General', max_length=200, verbose_name='the image types select')),
                ('Genre', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Adult', 'Adult'), ('Animation', 'Animation'), ('Comedy', 'Comedy'), ('Documentary', 'Documentary')], max_length=200, verbose_name='movies genre')),
                ('views', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='number of views and visits, pls do not add this this will automatically add it self')),
                ('posted_by', models.CharField(max_length=200, verbose_name='add name of staff posting this vidie')),
                ('duration', models.CharField(max_length=50, verbose_name='mins of movie length the duration')),
                ('reales', models.IntegerField(default=2020, null=True, verbose_name='movies reales date')),
                ('pub_date', models.DateTimeField(verbose_name='published date')),
                ('frame', models.ImageField(upload_to='movie_pics', verbose_name='frame cover image of the movie')),
                ('movie_file', models.FileField(unique=True, upload_to='moviefiles', verbose_name='file of the movie, if mocvie is seasonal please add the part one')),
                ('is_edited', models.BooleanField(default=False, verbose_name='do not add this its for the file and image editions')),
                ('is_published', models.BooleanField(default=False, verbose_name='if movie is publised')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='movie_thumbnails', verbose_name='thumbnail do not add this ')),
                ('slug_name', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='movie special slug do not add')),
                ('search_str', models.TextField(blank=True, null=True, verbose_name='movies search string this will auto generate')),
                ('spec_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='do not add it will auto generate, movies string')),
                ('verifed', models.BooleanField(default=False, verbose_name='do not click this verification')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_name', models.CharField(max_length=200, unique=True, verbose_name='series name')),
                ('s_title', models.TextField(verbose_name='the search title for this series can include the movie name and series discription or bio')),
                ('title', models.TextField(verbose_name='a simple page title')),
                ('meta', models.TextField(verbose_name='meta discrption for the series page somthing that discribes the movie')),
                ('discription', models.TextField(verbose_name='movies discription about the movie ')),
                ('series_type', models.CharField(choices=[('Animation', 'Animation'), ('Comedy', 'Comedy'), ('Adventure', 'Adventure'), ('Horror', 'Horror'), ('Action', 'Action'), ('Suspense', 'Suspense')], default='American movies', max_length=200, verbose_name='select the categories to clasifile the series')),
                ('fam', models.CharField(choices=[('trending', 'trending'), ('Documentary', 'documentary'), ('General', 'General')], default='General', max_length=200, verbose_name='the movie types select')),
                ('Genre', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Adult', 'Adult'), ('Animation', 'Animation'), ('Comedy', 'Comedy'), ('Documentary', 'Documentary')], max_length=200, verbose_name='series genre')),
                ('views', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='number of views and visits, pls do not add this this will automatically add it self')),
                ('posted_by', models.CharField(max_length=200, verbose_name='add name of staff posting this vidie')),
                ('duration', models.CharField(max_length=50, verbose_name='mins of movie length the duration')),
                ('reales', models.IntegerField(default=2020, null=True, verbose_name='movies reales date')),
                ('pub_date', models.DateTimeField(verbose_name='published date')),
                ('frame', models.ImageField(upload_to='series_pics', verbose_name='frame cover image of the movie')),
                ('series_file', models.FileField(unique=True, upload_to='seriesfiles', verbose_name='file of the movie, if mocvie is seasonal please add the part one')),
                ('is_edited', models.BooleanField(default=False, verbose_name='do not add this its for the file and image editions')),
                ('is_published', models.BooleanField(default=False, verbose_name='if movie is publised')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='movie_thumbnails', verbose_name='thumbnail do not add this ')),
                ('slug_name', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='movie special slug do not add')),
                ('search_str', models.TextField(blank=True, null=True, verbose_name='movies search string this will auto generate')),
                ('spec_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='do not add it will auto generate, movies string')),
                ('verifed', models.BooleanField(default=False, verbose_name='do not click this verification')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='staff fullname')),
                ('bio', models.TextField(max_length=500, verbose_name='staff biography')),
                ('country', models.CharField(default='Nigeria', max_length=200, verbose_name='staff country')),
                ('staff_pics', models.ImageField(blank=True, null=True, upload_to='staff_pics', verbose_name='staff image')),
                ('staff_pics2', models.ImageField(blank=True, null=True, upload_to='staff_pics', verbose_name='staff image2')),
                ('yo_channels', models.URLField(blank=True, null=True, verbose_name='youtube_channels')),
                ('fb_link', models.URLField(blank=True, null=True, verbose_name='facebook_link')),
                ('instagram_link', models.URLField(blank=True, null=True, verbose_name='instagram')),
                ('website_link', models.URLField(blank=True, null=True, verbose_name='website_link')),
            ],
        ),
        migrations.CreateModel(
            name='related',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='type the movie or series name here the same way its writen in models')),
                ('movies_relationship', models.ManyToManyField(to='moviedomeapp.movies')),
                ('series_relationship', models.ManyToManyField(to='moviedomeapp.series')),
            ],
        ),
    ]
